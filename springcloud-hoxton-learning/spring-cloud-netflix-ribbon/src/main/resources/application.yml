server:
  port: ${PORT:9100}

spring:
  application:
    name: ribbon
  cloud:
    loadbalancer:
      retry:
        #开启重试机制
        enabled: true

eureka:
  client:
    #服务注册，是否将服务注册到Eureka注册中心，true：注册，false：不注册
    register-with-eureka: true
    #服务发现，是否从Eureka注册中心获取注册信息，true：获取，false：不获取
    fetch-registry: true
    #配置Eureka注册中心即Eureka服务端的地址，集群地址以,隔开
    service-url:
      defaultZone: http://rtxtitanv:rtxtitanv@eureka-server-01:8001/eureka/,http://rtxtitanv:rtxtitanv@eureka-server-02:8002/eureka/,http://rtxtitanv:rtxtitanv@eureka-server-03:8003/eureka/
  instance:
    #将ip地址注册到Eureka注册中心
    prefer-ip-address: true
    #该服务实例在注册中心的唯一实例ID，${spring.cloud.client.ip-address}获取该服务实例ip
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    #该服务实例向注册中心发送心跳间隔，单位秒，默认30秒
    lease-renewal-interval-in-seconds: 20
    #Eureka注册中心在删除此实例之前收到最后一次心跳后的等待时间，单位秒，默认90秒
    lease-expiration-duration-in-seconds: 60

#ribbon指定客户端配置
eureka-client:
  ribbon:
    #指定Ribbon负载均衡策略，ribbon自带七种负载均衡策略，RoundRobinRule：轮询，RandomRule：随机
    #RetryRule：重试，WeightedResponseTimeRule：响应时间加权，BestAvailableRule：最小并发请求
    #AvailabilityFilteringRule：可用过滤，ZoneAvoidanceRule：区域权重
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

#ribbon全局配置
ribbon:
  #处理请求的超时时间，单位ms，默认1000
  ReadTimeout: 5000
  #连接建立的超时时间，单位ms，默认1000
  ConnectTimeout: 5000
  #切换实例的最大重试次数，不包括首次调用，默认0次
  MaxAutoRetriesNextServer: 3
  #对当前实例的最大重试次数，不包括首次调用，默认1次
  MaxAutoRetries: 1
  #是否对所有操作请求都进行重试，true：是，false：否，只针对get请求进行重试
  #设置为true时，如果是put或post等写操作，如果服务器接口不能保证幂等性，会产生不好的结果，所以OkToRetryOnAllOperations设置为true需慎用
  #默认情况下，get请求无论是连接异常还是读取异常，都会进行重试，非get请求，只有连接异常时，才会进行重试
  OkToRetryOnAllOperations: true
  #对指定Http响应码进行重试
  retryableStatusCodes: 404,500,502
  eager-load:
    #是否开启ribbon立即加载，true：开启，false：关闭，默认false
    enabled: true
    #指定需要立即加载的服务名，也就是你需要调用的服务，有多个则用逗号隔开
    clients: eureka-client

